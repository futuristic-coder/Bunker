<% layout("/layouts/boilerplate")%>

<!-- <h3> All Listings</h3> -->
    <!-- <form method="GET" action="/listings/new" >
        <button>Create New Listing </button>
    </form> -->

    <style>
        #filters {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
        }
        .filter{
            text-align: center;
            margin-right: 1.5rem;
            margin-top: 2rem;
            opacity: 0.7;;
        }
        
        .filter:hover{
            opacity: 1;
            cursor: pointer;
        }

        .tax-info{
            display:none
        }

        .listing-card{
        min-height: fit-content !important;
        /* padding-bottom: 1rem !important; */
        }
        .popup{
    transition: transform 0.3s ease;
  }
  .popup:hover{
    /* transform: translateY(-0.2rem); */
    transform: scale(1.01) translateY(-0.1rem);
  }
  .card-img-top{
    height: 20rem !important;
  }
  .show_btn{
    margin-bottom: 0 !important;
  }
  .card-body{
    /* padding-bottom: 0.2 !important; */
    height: fit-content !important;
    /* max-height: auto; */
  }
   /* Styling for GST toggle */
  .tax-toggler-container {
    display: flex;
    justify-content: flex-end;
  }
  .tax-toggler {
    box-shadow: 1px 2px 8px rgba(0, 0, 0, 0.2); 
    width: 250px;
    position: relative;
    right: 1rem; 
    padding: 10px 14px;
    border-radius: 8px;
    z-index: 10;
  }
  .tax-toggler label {
    font-size: 15px;
    margin-left: 5px;
    cursor: pointer;
    padding-right: 5px;
  }
  .red-text {
    color: #ff385c;
  }
  .normal-text{
    color: #858585d7;
  }
  #gstToggle{
    font-size: 1.2rem;
    position: relative;
    bottom: 2px;
  }
  .list-title{
    color: #ff385c;
  }
  .pppp .price,
  .pppp .nightt{
    color: rgb(65, 65, 65);
  }
  .listcardbody{
    padding-bottom: 0 !important;
  }
</style>


<div id="filters">
    <div class="filter" data-filter="Trending">
        <div>
            <i class="fa-solid fa-fire"></i>
            <p>Trending</p>
        </div>
    </div>
    <div class="filter" data-filter="Rooms">
        <div>
            <i class="fa-solid fa-bed"></i>
            <p>Rooms</p>
        </div>
    </div>
    <div class="filter" data-filter="Iconic Cities">
        <div>
            <i class="fa-solid fa-mountain-city"></i>
            <p>Iconic Cities</p>
        </div>
    </div>
    <div class="filter" data-filter="Mountains">
        <div>
            <i class="fa-solid fa-mountain"></i>
            <p>Mountains</p>
        </div>
    </div>
    <div class="filter" data-filter="Castles">
        <div>
            <i class="fa-brands fa-fort-awesome"></i>
            <p>Castles</p>
        </div>
    </div>
    <div class="filter" data-filter="Amazing pools">
        <div>
            <i class="fa-solid fa-person-swimming"></i>
            <p>Amazing pools</p>
        </div>
    </div>
    <div class="filter" data-filter="Camping">
        <div>
            <i class="fa-solid fa-campground"></i>
            <p>Camping</p>
        </div>
    </div>
    <div class="filter" data-filter="Farms">
        <div>
            <i class="fa-solid fa-tractor"></i>
            <p>Farms</p>
        </div>
    </div>
    <div class="filter" data-filter="Snow">
        <div>
            <i class="fa-solid fa-snowflake"></i>
            <p>Snow</p>
        </div>
    </div>
    <div class="filter" data-filter="Beach">
        <div>
            <i class="fa-solid fa-umbrella-beach"></i>
            <p>Beach</p>
        </div>
    </div>
    <div class="filter" data-filter="Boathouse">
        <div>
            <i class="fa-solid fa-ship"></i>
            <p>Boathouse</p>
        </div>
    </div>




    <!-- toogler -->
    <div class="tax-toggler-container">
        <div class="tax-toggler">
          <div class="form-check-reverse form-switch">
            <input type="checkbox" role="switch" class="form-check-input" id="gstToggle" onclick="toggleGST()">
            <label for="gstToggle" class="form-check-label">Display total after taxes</label>
          </div>
        </div>
    </div>
</div>
<div id="filtered-content" class="container">
    <!-- Filtered listings will appear here -->
</div>


<div class="container my-4">
    <div class="row row-cols-1 row-cols-lg-3 row-cols-md-2 row-cols-sm-2 gx-3"> <!-- Changed row-col-3 to row-cols-3 and removed row-cols-xs-1 -->
        <% for(let listing of allListings) { %>
            <div class="col popup">
                <a href="/listings/<%=listing._id %>" style="text-decoration: none;">
                    <div class="card listing-card">
                        <img src="<%= listing.image.url %>" class="card-img-top listing-img" alt="listing_image" style="height: 20rem;"/>
                        <!-- <div class="card-img-overlay"></div> -->
                        <div class="card-body listcardbody">
                            <h4 class="card-title list-title">
                              <%= listing.title.length > 26 ? listing.title.substring(0, 25) + '....' : listing.title %>
                            </h4>    
                            <p class="mt-3 pppp">
                              <span class="price" data-base-price="<%= listing.price %>"><%= listing.price.toLocaleString("en-IN") %></span> 
                              <span class="nightt">/ night</span> 
                              <span class="gst-label">(excl. GST)</span>
                            </p>
                            
                            <div class="card-text d-flex justify-content-between">
                              <p class="location"><i class="fa-solid fa-location-crosshairs"></i>&nbsp; <%= listing.location %>, <%= listing.country %></p>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        <% } %>
    </div>
</div>    


<script>
    const gstRate = 0.18;
    function toggleGST() {
        const gstToggle = document.getElementById("gstToggle");
        const priceElements = document.querySelectorAll(".price");
        const gstLabels = document.querySelectorAll(".gst-label");
        priceElements.forEach((priceElement, index) => {
            const basePrice = parseFloat(priceElement.getAttribute("data-base-price"));
            const totalPrice = basePrice * (1 + gstRate);
            
            
            if (gstToggle.checked) {
                priceElement.innerText = totalPrice.toLocaleString("en-IN", { style: "currency", currency: "INR" });
                gstLabels[index].innerText = "(incl. GST)";
                gstLabels[index].classList.remove("normal-text"); // Add red color
                gstLabels[index].classList.add("red-text");
            } else {
                priceElement.innerText = basePrice.toLocaleString("en-IN", { style: "currency", currency: "INR" });
                gstLabels[index].innerText = "(excl. GST)";
                gstLabels[index].classList.remove("red-text"); 
                gstLabels[index].classList.add("normal-text"); // Add red color
            }
        });
    }

// Initialize with base prices
document.addEventListener("DOMContentLoaded", toggleGST);


document.addEventListener('DOMContentLoaded', () => {
    const filters = document.querySelectorAll('.filter');
    const listingsContainer = document.querySelector('.container.my-4 .row'); // Target main listings container
    const allListingsHTML = listingsContainer.innerHTML; // Store original listings

    // Function to fetch and display listings
    async function fetchListings(category) {
        try {
            listingsContainer.innerHTML = '<p>Loading...</p>'; // Show loading text
            
            const response = await fetch(`/listings/filter?category=${category}`);
            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
            
            const listings = await response.json();
            if (listings.length === 0) {
                listingsContainer.innerHTML = '<p>No listings available for this category.</p>';
                return;
            }

            // Generate new listings with the same structure
            listingsContainer.innerHTML = listings.map((listing) => `
                <div class="col popup">
                    <a href="/listings/${listing._id}" style="text-decoration: none;">
                        <div class="card listing-card">
                            <img src="${listing.image.url}" class="card-img-top listing-img" alt="listing_image" style="height: 20rem;">
                            <div class="card-body listcardbody">
                                <h4 class="card-title list-title">
                                    ${listing.title.length > 26 ? listing.title.substring(0, 25) + '....' : listing.title}
                                </h4>    
                                <p class="mt-3 pppp">
                                    <span class="price" data-base-price="${listing.price}">${listing.price.toLocaleString("en-IN")}</span> 
                                    <span class="nightt">/ night</span> 
                                    <span class="gst-label">(excl. GST)</span>
                                </p>
                                <div class="card-text d-flex justify-content-between">
                                    <p class="location"><i class="fa-solid fa-location-crosshairs"></i>&nbsp; ${listing.location}, ${listing.country}</p>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            `).join('');

            // Call toggleGST() to update prices after new listings are loaded
            toggleGST();
        } catch (error) {
            console.error('Error fetching listings:', error);
            listingsContainer.innerHTML = '<p>Failed to load listings. Please try again later.</p>';
        }
    }

    // Add click event listeners to filters
    filters.forEach((filter) => {
        filter.addEventListener('click', () => {
            const category = filter.dataset.filter;
            
            if (category === "All") {
                listingsContainer.innerHTML = allListingsHTML; // Restore original listings
                return;
            }

            // Highlight the active filter
            filters.forEach((f) => f.classList.remove('active'));
            filter.classList.add('active');

            // Fetch and display the listings for the selected category
            fetchListings(category);
        });
    });
});

</script>